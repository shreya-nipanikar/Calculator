{"version":3,"sources":["reportWebVitals.js","index.js","App.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById","useEffect","alanBtn","key","onCommand","commandData","command","useState","result","setResult","actionButton","event","concat","target","value","actionClear","actionbackspace","slice","length","calculate","eval","toString","error","className","type","onClick","id"],"mappings":"2MAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAA,EAAD,MAEFC,SAASC,eAAe,SAM1Bd,K,0+BCZMY,IAAM,SAANA,MAGJG,sDAAU,WACVC,6DAAQ,CACPC,IAAK,yEACLC,UAAW,SAACC,GACPA,EAAYC,aAMhB,IAbc,cAgBWC,oDAAS,IAhBpB,+MAgBTC,OAhBS,cAgBFC,UAhBE,cAkBVC,aAAe,SAACC,GACnBF,UAAUD,OAAOI,OAAOD,EAAME,OAAOC,SAGlCC,YAAc,WAClBN,UAAU,KAGNO,gBAAkB,WACtBP,UAAUD,OAAOS,MAAM,EAAET,OAAOU,OAAS,KAIrCC,UAAY,SAAZA,YACJ,IACEV,UAAUW,KAAKZ,QAAQa,YACxB,MAAMC,OACLb,UAAU,WAKd,OACC,mEAAKc,UAAU,YAAf,UACG,kEAAKA,UAAU,UAAf,SACA,2FAGE,mEAAKA,UAAU,OAAf,UACE,4EACE,oEAAOC,KAAK,OAAOV,MAAON,WAG5B,kEAAKe,UAAU,mBAAf,SACE,mEAAKA,UAAU,SAAf,UACA,qEAAQE,QAASV,YAAaW,GAAG,QAAjC,mBACA,qEAAQD,QAAST,gBAAiBU,GAAG,YAArC,eACA,qEAAQZ,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,kBAEA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,kBAEA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,oBAEA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQI,MAAM,IAAIW,QAASf,aAA3B,eACA,qEAAQe,QAASN,UAAjB,2BAUGrB,4B","file":"static/js/main.2e54eccd.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React, { useState , useEffect } from 'react';\nimport alanBtn from \"@alan-ai/alan-sdk-web\";\nimport './App.css';\n\nconst App = () => {\n\n\n  useEffect(() => {\n\t\talanBtn({\n\t\t\tkey: 'd1563df44f644d402e28f447289aa9092e956eca572e1d8b807a3e2338fdd0dc/stage',\n\t\t\tonCommand: (commandData) => {\n\t\t\t\tif (commandData.command === 'calculate') {\n\t\t\t\t\t// Call the client code that will react to the received command\n          \n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}, []); \n\n\n  const [result,setResult] = useState(\"\");\n\n  const actionButton = (event) => {\n     setResult(result.concat(event.target.value));\n  }\n\n  const actionClear = () => {\n    setResult(\"\");\n  }\n\n  const actionbackspace = () => {\n    setResult(result.slice(0,result.length - 1));\n    \n  }\n\n  const calculate = () => {\n    try{\n      setResult(eval(result).toString());\n    }catch(error){\n      setResult(\"Error\");\n    }\n   \n  }\n\n  return (\n   <div className=\"container\">\n      <div className=\"heading\">\n      <h1>Calculator</h1>\n       </div>\n        \n        <div className=\"main\">\n          <form>\n            <input type=\"text\" value={result}></input>\n          </form>\n\n          <div className=\"keypad-container\">\n            <div className=\"keypad\">\n            <button onClick={actionClear} id=\"clear\">Clear</button>\n            <button onClick={actionbackspace} id=\"backspace\">C</button>\n            <button value=\"%\" onClick={actionButton}>%</button>\n            <button value=\"/\" onClick={actionButton}>&divide;</button>\n            \n            <button value=\"7\" onClick={actionButton}>7</button>\n            <button value=\"8\" onClick={actionButton}>8</button>\n            <button value=\"9\" onClick={actionButton}>9</button>\n            <button value=\"*\" onClick={actionButton}>&times;</button>\n            \n            <button value=\"4\" onClick={actionButton}>4</button>\n            <button value=\"5\" onClick={actionButton}>5</button>\n            <button value=\"6\" onClick={actionButton}>6</button>\n            <button value=\"-\" onClick={actionButton}>&ndash;</button>\n            \n            <button value=\"1\" onClick={actionButton}>1</button>\n            <button value=\"2\" onClick={actionButton}>2</button>\n            <button value=\"3\" onClick={actionButton}>3</button>\n            <button value=\"+\" onClick={actionButton}>+</button>\n            <button value=\".\" onClick={actionButton}>.</button>\n            <button value=\"0\" onClick={actionButton}>0</button>\n            <button onClick={calculate}>=</button>\n            \n          </div>\n        </div>\n      </div>\n\n   </div>\n  );\n}\n\nexport default App;\n"],"sourceRoot":""}